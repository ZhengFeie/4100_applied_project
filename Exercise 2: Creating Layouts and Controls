#python
#Exercise 2: Creating Layouts and Controls
#- In this section, students will learn how to use the Layout Manager (Vertical Layout and Horizontal Layout) and how to add and use different controls (Labels, Buttons, Text Input Boxes, etc.).

# Creating Master Parts and Vertical Layouts
main_widget = QWidget(self)
layout = QVBoxLayout(main_widget)

# Creating Horizontal Layout and Tab Controls
input_layout = QHBoxLayout()
input_label = QLabel("import:")
input_layout.addWidget(input_label)

# Creating Input Box Controls
self.input_text = QLineEdit()
input_layout.addWidget(self.input_text)

# Creating a Send Button Control
self.send_button = QPushButton("SEND")
input_layout.addWidget(self.send_button)

# Creating Voice Recognition Button Controls
self.speech_button = QPushButton("speech recognition")
input_layout.addWidget(self.speech_button)

# Adding Horizontal Layout to Vertical Layout
layout.addLayout(input_layout)

# Creating a Response Label Control
self.response_label = QLabel()
layout.addWidget(self.response_label)

'''
Detail Explanation:
In this exercise, students will delve into the concept of layout management and various control elements in PyQt5. Here's a breakdown of the code:

1. Creating the Main Widget and Vertical Layout:

A main widget is created to house the entire GUI layout.
A vertical layout (QVBoxLayout) is established within the main widget.

2. Creating a Horizontal Layout and Adding Control Labels:

A horizontal layout (QHBoxLayout) is created to organize controls side by side.
A label (QLabel) named "import:" is added to this horizontal layout.

3. Creating Input Box Controls:

A text input box (QLineEdit) is generated for users to input text.
The input box is added to the horizontal layout.

4. Creating a Send Button Control:

A button (QPushButton) labeled "SEND" is added for sending inputs.
The button is placed in the same horizontal layout.

5. Creating Voice Recognition Button Controls:

Another button for voice recognition is created and labeled "speech recognition."
This button is also included in the horizontal layout.

6. Adding the Horizontal Layout to the Vertical Layout:

The horizontal layout, containing all the controls, is added to the vertical layout.

7. Creating a Response Label Control:

A label control (QLabel) is established to display responses.
This label is added to the vertical layout.
This exercise familiarizes students with the layout management concept and demonstrates how to integrate various controls within a GUI application. They can run the code and observe how controls are organized using layouts.
'''

